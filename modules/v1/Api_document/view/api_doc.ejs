<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">

<head>
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
    <link href="https://unpkg.com/vuetify@1.0.17/dist/vuetify.min.css" type="text/css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons" rel="stylesheet">
    <link rel="shortcut icon" href="<%= BASE_URL_WITHOUT_API %>">

    <title>
        <%= BASE_URL_WITHOUT_API %> API</title>
    <style type="text/css">
        .medium-text {
            font-size: 20px;
            color: white;
        }
    </style>
</head>

<body>
    <BR>
    <BR>

    <div id="main" style="margin:0px auto; text-align:center; position:sticky;">
        <center>
            <table border="0" cellpadding="10" cellspacing="10" width="70%" style="background-color: #2c7399;color: #fff;font-weight: bold;">
                <tr>
                    <td><b>Server URL :-</b></td>
                    <td>
                        <%= BASE_URL %>
                    </td>
                    <td>Header Parameters :</td>
                    <td><b>api_key,<br>authorization_token,<br>accept_language (en,guj,fr)</td>
                </tr>
                <tr>
                    <td colspan="4" align="center"><b>In authorization_token pass access_token</b></td>
                </tr>
            </table>
        </center>

        <br>
        <br>
    </div>
    <div id="app">
        <v-app id="inspire">
            <v-layout justify column>
                <v-flex style="margin:0px auto; padding:0px; text-align:center;" center right sm2 xs2 md2 lg2 xl2>
                    <!-- <img src='<%= BASE_URL_WITHOUT_API %>'width="250px" height="250px" style="border:1px solid black"> -->
                    <br>
                    <strong style="font-size:24px;">
						<%= APP_NAME %> API LIST</strong>
                    <br>
                    <br>
                </v-flex>
                <v-flex style="margin:0px auto; padding:0px;" center right sm2 xs2 md2 lg2 xl2>

                    <div id="main" style="margin:0px auto; position:sticky;">
                        <table border="0" cellpadding="10" cellspacing="10" width="140%" style="background-color: rgb(71, 131, 100);color: #fff;font-weight: bold;">
                            <tr>
                                <td><b>Server URL :</b></td>
                                <td>
                                    localhost:5000/v1/</td>
                            </tr>
                            <tr>
                                <td><b>Header Parameters :</b></td>
                                <td>api-key, authorization_token, accept_language</td>
                            </tr>
                            <tr>
                                <td><b>api_key :</b></td>
                                <td><b><%= API_KEY %></b></td>
                            </tr>
                            <tr>
                                <td><b>api_key(encrypted) :-</b></td>
                                <td><b>+WW/wWUw/w/DVgaIjrc3dw==</b></td>
                            </tr>
                            <tr>
                                <td><b>KEY :</b></td>
                                <td><b>xza548sa3vcr641b5ng5nhy9mlo64r6k</b></td>
                            </tr>
                            <tr>
                                <td><b>IV :</b></td>
                                <td><b>5ng5nhy9mlo64r6k</b></td>
                            </tr>
                        </table>
                        <br>
                        <br>
                    </div>
                </v-flex>
                <v-flex style="margin:0px auto;" center right sm2 xs2 md2 lg2 xl2>
                    <!-- <a target="_blank" href='<%= APP_NAME %>/v1/api_document/user_list'>
                        <v-btn color="blue-grey" class="white--text">
                            User LIST
                            <v-icon right dark>people</v-icon>
                        </v-btn>
                    </a> -->
                    <!-- 	<a target="_blank" href='<%= APP_NAME %>v1/Api_document/tutor_list'>
						<v-btn color="blue-grey" class="white--text">
							Tutor LIST
							<v-icon right dark>people</v-icon>
						</v-btn>
					</a> -->
                    <a href='<%= PORT_BASE_URL %>/api-doc/code'>
                        <v-btn color="blue-grey" class="white--text">
                            CODE REFERENCE
                            <v-icon right dark>code</v-icon>
                        </v-btn>
                    </a>
                    <a target="_blank" href='http://localhost:8000/enc_dec.php'>
                        <v-btn color="blue-grey" class="white--text">
                            ENCRYPTION URL
                            <v-icon right dark>lock</v-icon>
                        </v-btn>
                    </a>
                    <!-- <a target="_blank" href='https://vuetifyjs.com/en/style/colors'>
						<v-btn color="blue-grey" class="white--text">
							COLOR INFO
							<v-icon right dark>color_lens</v-icon>
						</v-btn>
					</a>
					<a target="_blank" href='https://material.io/tools/icons/?style=baseline'>
						<v-btn color="blue-grey" class="white--text">
							ICON INFO
							<v-icon right dark>bubble_chart</v-icon>
						</v-btn>
					</a> -->
                </v-flex>
                <v-expansion-panel popout>
                    <v-expansion-panel-content v-for="(message, i) in messages" :key="i" hide-actions>
                        <v-layout slot="header" align-center row spacer>
                            <v-flex sm1 xs1 md1 lg1 xl1>
                                <v-avatar slot="activator" size="36px">
                                    <v-icon :color="message.color">{{ message.icon }}</v-icon>
                                </v-avatar>
                            </v-flex>
                            <v-flex sm3 xs3 md3 lg3 xl3>
                                <strong v-html="message.title"></strong>
                                <v-chip v-if="message.meth" :color="`${message.color} lighten-4`" label small class="ml-0">
                                    {{ message.meth }}
                                </v-chip>
                            </v-flex>
                            <v-flex sm3 xs3 md3 lg3 xl3>
                                <strong v-html="message.name"></strong>
                            </v-flex>
                            <v-flex sm4 xs4 md4 lg4 xl4>
                                <v-flex v-if="message.link" class="grey--text" ellipsis hidden-sm-and-down>
                                    {{ message.link }}
                                </v-flex>
                                <v-flex v-if="message.imp" class="grey--text" ellipsis hidden-sm-and-down>
                                    <p style="color:darkred">SHOW IMPORTANT NOTE INSIDE</p>
                                </v-flex>
                            </v-flex>
                        </v-layout>
                        <v-card dark>
                            <v-container>
                                <v-layout>
                                    <v-flex xs12 align-end flexbox>
                                        <v-alert :value="true" outline color="white" style="padding:5px;">
                                            <v-chip color="teal" text-color="white">
                                                <v-avatar>
                                                    <v-icon>check_circle</v-icon>
                                                </v-avatar> MANDATORY
                                            </v-chip>
                                            {{message.mandatory}}
                                        </v-alert>
                                        <v-alert :value="true" outline color="white" style="padding:5px;">
                                            <v-chip outline color="#F0F4C3">
                                                <v-avatar>
                                                    <v-icon>check_circle</v-icon>
                                                </v-avatar>OPTIONAL
                                            </v-chip>
                                            <span>{{ message.optional }}
										</v-alert>
										<v-alert v-if="message.link" :value="true" outline color="white"
											style="padding:5px;">
											<v-chip color="light-green darken-2" text-color="white">
												<v-avatar>
													<v-icon>explore</v-icon>
												</v-avatar> LINK
											</v-chip>
											<span>{{ message.link }}
										</v-alert>
										<v-alert v-if="message.imp" :value="true" outline color="white"
											style="padding:5px;">
											<v-chip color="red darken-2" text-color="white">
												<v-avatar>
													<v-icon>flight_land</v-icon>
												</v-avatar> IMPORTANT
											</v-chip>
											<p v-html="message.imp"></p>
										</v-alert>
										<v-alert v-if="message.exp" :value="true" outline color="white"
											style="padding:5px;">
											<v-chip color="blue darken-2" text-color="white">
												<v-avatar>
													<v-icon></v-icon>
												</v-avatar> EXAMPLE
											</v-chip>
											<p v-html="message.exp"></p>
										</v-alert>
										<v-alert v-if="message.notes" :value="true" outline color="white"
											style="padding:5px;">
											<v-chip color="blue lighten-1" text-color="white">
												<v-avatar>
													<v-icon>bookmark</v-icon>
												</v-avatar> NOTES
											</v-chip>
											<span>{{ message.notes }}
										</v-alert>
										<v-layout style="margin-top:-4px">
											<v-flex xs6 align-end flexbox>
												<v-alert :value="true" outline color="yellow" icon="priority_high"
													style="padding:5px;">
													<span class="grey--text">HEADER : {{ message.is_header }}, PUSH :
														{{ message.is_push }}</span>
                                            <br>
                                            <span>HEADER : {{ message.header }}</span>
                                        </v-alert>
                                    </v-flex>
                                    <v-flex xs6 align-end flexbox>
                                        <v-alert style="margin-left:4px; padding:5px;" :value="true" outline color="yellow" icon="priority_high">
                                            STATUS :
                                            <span v-html="message.status"></span>
                                        </v-alert>
                                    </v-flex>
                                </v-layout>
                                </v-flex>
            </v-layout>
            </v-container>
            <v-card-actions>
            </v-card-actions>
            </v-card>
            </v-expansion-panel-content>
            </v-expansion-panel>
            </v-layout>
        </v-app>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <script src="https://unpkg.com/vuetify@1.0.17/dist/vuetify.min.js"></script>
    <script src="https://unpkg.com/babel-polyfill/dist/polyfill.min.js"></script>

    <script>
        //console.log('<%= BASE_URL_WITHOUT_API %>enc_dec.php');

        new Vue({
            el: '#app',
            data: () => ({
                messages: [
                {
        color: 'teal',
        icon: 'person',
        title: '1 : USER',
        name: 'SIGNUP',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/signup",
        mandatory: "email_id, code_id, phone_number, password_, fname, lname, signup_type",
        optional: "device_type, os_version, app_version, time_zone",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API signs up a user. If the user exists, it sends an OTP for verification. Supports standard ('S') and social signups.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., user exists, social ID not found, error), Code 1 => SUCCESSFUL RESULT (signup completed or OTP sent)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '2 : USER',
        name: 'Verify OTP',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/verifyOtp",
        mandatory: "email_id, otp",
        optional: "",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API verifies a user's OTP. Updates user step to '2' on success. Fails if OTP is expired or invalid.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., invalid/expired OTP, email not found), Code 1 => SUCCESSFUL RESULT (OTP verified or already verified)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '3 : USER',
        name: 'Forgot Password',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/forgotPassword",
        mandatory: "email_id",
        optional: "",
        is_header: "YES",
        is_push: "NO",
        header: "api-key",
        notes: "This API sends a reset token to the user's email. Fails for social signups or if a valid token exists (expires in 1 hour).",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., email not found, social signup, token exists), Code 1 => SUCCESSFUL RESULT (token sent)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '4 : USER',
        name: 'Reset Password',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/resetPassword",
        mandatory: "reset_token, new_password",
        optional: "",
        is_header: "YES",
        is_push: "YES",
        header: "api_key",
        notes: "This API resets the user's password using a valid reset token. Deactivates the token after use.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., invalid/expired token, error), Code 1 => SUCCESSFUL RESULT (password reset)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '5 : USER',
        name: 'Login',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/login",
        mandatory: "email_id, password_, login_type",
        optional: "",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API logs in a user. Supports standard ('S') and social logins. Returns a welcome message with the user's first name.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., user not found, invalid password, wrong login type), Code 1 => SUCCESSFUL RESULT (login successful)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '6 : USER',
        name: 'Complete Profile',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/complete-profile",
        mandatory: "email_id",
        optional: "address, date_of_birth, gender, latitude, longitude",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API completes a user's profile. Fails if profile is already completed or email not found.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., email not found, profile already completed), Code 1 => SUCCESSFUL RESULT (profile completed)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '7 : USER',
        name: 'Change Password',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/change-password",
        mandatory: "old_password, new_password",
        optional: "",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API changes the user's password. Requires user to be logged in. Fails for social signups.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., user not found, old password mismatch, social signup), Code 1 => SUCCESSFUL RESULT (password changed)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '8 : USER',
        name: 'Logout',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/logout",
        mandatory: "",
        optional: "",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API logs out a user by clearing tokens. Requires user to be logged in.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., user not found), Code 1 => SUCCESSFUL RESULT (logout successful)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '9 : USER',
        name: 'View Profile',
        meth: 'GET',
        link: "<%= PORT_BASE_URL %>/v1/user/view-profile",
        mandatory: "",
        optional: "",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API retrieves the user's profile data. Requires user to be logged in.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., user not found), Code 1 => SUCCESSFUL RESULT (profile data returned)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '10 : USER',
        name: 'Edit Profile',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/edit-profile",
        mandatory: "",
        optional: "fname, lname, date_of_birth, address, gender, profile_pic",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API updates the user's profile. At least one optional field must be provided. Requires user to be logged in.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., no fields provided, user not found), Code 1 => SUCCESSFUL RESULT (profile updated)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '11 : USER',
        name: 'Home Page',
        meth: 'GET',
        link: "<%= PORT_BASE_URL %>/v1/user/home-page",
        mandatory: "",
        optional: "",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API fetches home page data including top saved products and categories. Requires user to be logged in.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., no data found), Code 1 => SUCCESSFUL RESULT (data returned)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '12 : USER',
        name: 'List Stores',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/list-stores",
        mandatory: "",
        optional: "veg_store, grocery_store",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API lists stores based on user location and optional filters (veg_store, grocery_store). Requires user to be logged in.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., no stores found, invalid filter), Code 1 => SUCCESSFUL RESULT (stores listed)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '13 : USER',
        name: 'Product Listing',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/product-listing",
        mandatory: "store_id",
        optional: "",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API lists products for a specific store. Requires user to be logged in.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., no products found), Code 1 => SUCCESSFUL RESULT (products listed)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '14 : USER',
        name: 'Product Detail',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/product-detail",
        mandatory: "product_id",
        optional: "",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API retrieves details for a specific product, including store info. Requires user to be logged in.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., product not found), Code 1 => SUCCESSFUL RESULT (product details returned)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '15 : USER',
        name: 'Post Review',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/post-review",
        mandatory: "store_id, rating, reviews, apprating",
        optional: "",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API submits a review for a store and app rating. Requires user to be logged in.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., missing fields, error), Code 1 => SUCCESSFUL RESULT (review posted)"
    },
    {
        color: 'teal',
        icon: 'person',
        title: '16 : USER',
        name: 'Place Order',
        meth: 'POST',
        link: "<%= PORT_BASE_URL %>/v1/user/place-order",
        mandatory: "products, flat_number, area_name, block_number, road_name, type_, pincode",
        optional: "",
        is_header: "YES",
        is_push: "NO",
        header: "api-key, accept_language",
        notes: "This API places an order with products and delivery address. Products must include product_id, qty, and weight. Requires user to be logged in.",
        status: "<br>1. HTTP_OK[200] - code : 1 (Success) <br>2. HTTP_OK[200] - code : 0 (Operation Failed)",
        imp: "Code 0 => OPERATION FAILED (e.g., no products, error), Code 1 => SUCCESSFUL RESULT (order placed)"
    }
            ]
            })
        });
    </script>
</body>

</html>